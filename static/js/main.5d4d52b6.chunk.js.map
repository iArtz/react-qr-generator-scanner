{"version":3,"sources":["pages/Home.js","pages/QRgenerator.js","pages/QRscanner.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Typography","style","margin","variant","Grid","container","spacing","item","xs","to","Button","size","color","padding","path","mdiQrcodeScan","title","QRgenerator","useState","qr","setQr","Fab","marginRight","ArrowBack","marginTop","TextField","onChange","event","target","value","width","label","id","includeMargin","TextareaAutosize","fontSize","height","rowsMax","defaultValue","onClick","pngUrl","document","getElementById","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","marginLeft","GetApp","QRscanner","qrscan","setQrscan","list","setList","delay","onError","err","console","error","onScan","data","table","includes","undefined","App","className","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5d4d52b6.chunk.js","sourcesContent":["import { Grid, Button, Typography } from '@material-ui/core'\nimport Icon from '@mdi/react'\nimport { mdiQrcodeScan } from '@mdi/js'\nimport { Link } from 'react-router-dom'\n\nfunction Home() {\n  return (\n    <div>\n      <Typography style={{ margin: 30 }} variant='h2'>\n        Scan QR\n      </Typography>\n\n      <Grid container spacing={6}>\n        <Grid item xs={6}>\n          <Link to='/qr_scanner'>\n            <Button variant='contained' size='large' style={{ color: 'red' }}>\n              <Icon\n                style={{ padding: 10 }}\n                path={mdiQrcodeScan}\n                title='QR Scanner'\n                size={10}\n                color='white'\n              />\n            </Button>\n          </Link>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Home\n","import React, {useState} from 'react'\nimport {Fab, TextField, TextareaAutosize, Grid} from '@material-ui/core'\nimport {ArrowBack, GetApp} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QRcode from 'qrcode.react'\n\nfunction QRgenerator() {\n    const [qr, setQr] = useState('lintangwisesa');\n    const handleChange = (event) => {\n        setQr(event.target.value);\n    };\n    const downloadQR = () => {\n        const canvas = document.getElementById(\"myqr\");\n        const pngUrl = canvas\n          .toDataURL(\"image/png\")\n          .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = \"myqr.png\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    };\n\n    return (\n      <div>\n            <Link to=\"/\">\n            <Fab style={{marginRight:10}} color=\"primary\">\n                <ArrowBack/>\n            </Fab>\n            </Link>\n            <span>QR Generator</span>\n            \n            <div style={{marginTop:30}}>\n                <TextField onChange={handleChange} style={{width:320}}\n                value={qr} label=\"QR content\" size=\"large\" variant=\"outlined\" color=\"primary\" \n                />\n            </div>\n\n            <div>\n                {\n                    qr ?\n                    <QRcode \n                        id=\"myqr\"\n                        value={qr} \n                        size={320}\n                        includeMargin={true}\n                    /> :\n                    <p>No QR code preview</p>\n                }\n            </div>\n            <div>\n                {\n                    qr ? \n                    <Grid container>\n                        <Grid item xs={10}>\n                        <TextareaAutosize\n                            style={{fontSize:18, width:250, height:100}}\n                            rowsMax={4}\n                            defaultValue={qr}\n                            value={qr}\n                        />\n                        </Grid>\n                        <Grid item xs={2}>\n                        <Fab onClick={downloadQR} style={{marginLeft:10}} color=\"primary\">\n                            <GetApp/>\n                        </Fab>\n                        </Grid>\n                    </Grid> :\n                    ''\n                }\n            </div>\n      </div>\n    );\n  }\n  \n  export default QRgenerator;\n  ","import React, { useState } from 'react'\nimport { Fab, TextareaAutosize } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons'\nimport { Link } from 'react-router-dom'\nimport QrScan from 'react-qr-reader'\n\nfunction QRscanner() {\n  const [qrscan, setQrscan] = useState()\n  const [list, setList] = useState([])\n\n  const handleScan = (data) => {\n    if (data) {\n      setQrscan(data)\n      console.table(list)\n      if (!list.includes(qrscan) && qrscan !== undefined) {\n        setList([...list, qrscan])\n      }\n    }\n  }\n  const handleError = (err) => {\n    console.error(err)\n  }\n\n  return (\n    <div>\n      <Link to='/'>\n        <Fab style={{ marginRight: 10, color: 'orenge' }}>\n          <ArrowBack />\n        </Fab>\n      </Link>\n      <span>QR Scanner</span>\n\n      <center>\n        <div style={{ marginTop: 30 }}>\n          <QrScan\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            style={{ height: 240, width: 320 }}\n          />\n        </div>\n      </center>\n\n      <TextareaAutosize\n        style={{ fontSize: 18, width: 320, height: 100, marginTop: 100 }}\n        rowsMax={4}\n        defaultValue={qrscan}\n        value={qrscan}\n      />\n    </div>\n  )\n}\n\nexport default QRscanner\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home'\nimport QRgen from './pages/QRgenerator'\nimport QRscan from './pages/QRscanner'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n      \n        <Router>\n          <div>\n\n            <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/qr_generator\">\n                <QRgen/>\n              </Route>\n              <Route path=\"/qr_scanner\">\n                <QRscan/>\n              </Route>\n            </Switch>\n\n          </div>\n        </Router>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}